extends common/layout

block layout-content
  .container.mt-5
    h1.mb-4 Edit Project
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    
    form(id="editProjectForm" enctype="multipart/form-data")
      .mb-3
        label.form-label(for='name') Project Name:
        input.form-control(
          type='text' 
          name='name' 
          value=project.name 
          required
        )
      
      .mb-3
        label.form-label(for='description') Description:
        textarea.form-control(
          name='description' 
          rows='4' 
          required
        )= project.description
      
      .mb-3
        label.form-label(for='date') Date (Month Year):
        input.form-control(
          type='text' 
          name='date' 
          value=project.date || "June 2025"
        )
      
      .mb-3
        label.form-label(for='technologies') Technologies (comma separated):
        input.form-control(
          type='text' 
          name='technologies' 
          value=project.technologies.join(', ')
        )
      
      .mb-3
        label.form-label(for='github') GitHub URL:
        input.form-control(
          type='url' 
          name='github' 
          value=project.github || "#"
        )
      
      .mb-3
        label.form-label(for='members') Team Members (comma separated):
        input.form-control(
          type='text' 
          name='members' 
          value=project.members.join(', ')
        )
      
      .mb-3
        label.form-label(for='media') Update Media (Image or Video):
        input.form-control(
          type='file' 
          name='media' 
          accept="image/*,video/*"
        )
        if project.media
          small Current: #{project.media}
      
      button.btn.btn-primary(type='submit') Update Project
      a.btn.btn-secondary.mx-2(href="/") Cancel

    script.
      document.getElementById('editProjectForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const projectId = '#{project._id}';
        
        // Show loading state
        const submitBtn = e.target.querySelector('button[type="submit"]');
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Updating...';
        
        try {
          // Convert comma-separated strings to arrays
          const techInput = formData.get('technologies');
          const membersInput = formData.get('members');
          
          if (techInput) {
            formData.set('technologies', techInput.split(',').map(t => t.trim()));
          }
          
          if (membersInput) {
            formData.set('members', membersInput.split(',').map(m => m.trim()));
          }

          const response = await axios.put(`/projects/${projectId}`, formData, {
            headers: {
              'Content-Type': 'multipart/form-data'
            }
          });
          
          if (response.data) {
            window.location.href = '/';
          } else {
            throw new Error('Update failed - no data returned');
          }
        } catch (error) {
          console.error('Full error:', error);
          
          // Restore button state
          submitBtn.disabled = false;
          submitBtn.textContent = 'Update Project';
          
          // Show detailed error message
          let errorMessage = 'Error updating project';
          if (error.response) {
            errorMessage += ` (${error.response.status}): `;
            if (error.response.data && error.response.data.message) {
              errorMessage += error.response.data.message;
            } else {
              errorMessage += 'Server error occurred';
            }
          } else {
            errorMessage += `: ${error.message}`;
          }
          
          alert(errorMessage);
        }
      });
